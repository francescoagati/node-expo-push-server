{"version":3,"sources":["../src/index.js"],"names":["opts","exponentPushToken","isExponentPushToken","Error","message","undefined","body","data","BASE_API_URL","method","JSON","stringify","headers","response","status","json","err","sendPushNotificationAsync","BASE_URL","token","test"],"mappings":";;;;;;;;;;;;;;;;;;;AAsBA;;;;;wEAIO,iBAAyCA,IAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AACDC,6BADC,GACmBD,KAAKC,iBADxB;;AAAA,gBAGAC,oBAAoBD,iBAApB,CAHA;AAAA;AAAA;AAAA;;AAAA,kBAIG,IAAIE,KAAJ,yHAENF,iBAFM,OAJH;;AAAA;AASDG,mBATC,GASSJ,KAAKI,OAAL,IAAgBC,SATzB;AAUCC,gBAVD,8BAWAN,KAAKO,IAXL;AAYHN,kDAZG;AAaHG;AAbG;AAAA;AAAA,mBAgBgB,yBAASI,YAAT,cAAgC;AACnDC,sBAAQ,MAD2C;AAEnDH,oBAAMI,KAAKC,SAAL,CAAeL,IAAf,CAF6C;AAGnDM,uBAAS,uBAAY;AACnB,gCAAgB;AADG,eAAZ;AAH0C,aAAhC,CAhBhB;;AAAA;AAgBDC,oBAhBC;;AAAA,kBAwBDA,SAASC,MAAT,KAAoB,GAxBnB;AAAA;AAAA;AAAA;;AAAA,kBAyBG,IAAIX,KAAJ,mCAA0CF,iBAA1C,CAzBH;;AAAA;AAAA,kBA4BDY,SAASC,MAAT,KAAoB,GA5BnB;AAAA;AAAA;AAAA;;AAAA,6CA6BIT,SA7BJ;;AAAA;AAAA;AAAA,mBA+BcQ,SAASE,IAAT,EA/Bd;;AAAA;AA+BCA,gBA/BD;AAAA,kBAgCG,IAAIZ,KAAJ,uCAA8CY,KAAKC,GAAnD,CAhCH;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAeC,yB;;;;;QATNf,mB,GAAAA,mB;;AAThB;;;;;;AAEA,IAAMgB,WAAW,mBAAjB,C,CAVA;;;;;;;;AAWA,IAAMV,eAAkBU,QAAlB,WAAN;;AAEA;;;;AAIO,SAAShB,mBAAT,CAA6BiB,KAA7B,EAAoC;AACzC,SAAS,OAAOA,KAAP,KAAkB,QAAnB,IAAgC,uBAAuBC,IAAvB,CAA4BD,KAA5B,CAAxC;AACD","file":"index.js","sourcesContent":["/**\n * exponent-server-sdk\n *\n * Use this if you are running Node on your server backend when you are working with Exponent\n * https://getexponent.com/\n *\n */\n\nimport fetch, { Headers } from 'node-fetch';\n\nconst BASE_URL = 'https://exp.host/';\nconst BASE_API_URL = `${BASE_URL}--/api`;\n\n/**\n * Returns `true` if the token is an Exponent push token\n *\n */\nexport function isExponentPushToken(token) {\n  return ((typeof(token) === 'string') && /^ExponentPushToken.+/.test(token));\n}\n\n\n/**\n * Sends a push notification with the given options and data\n *\n */\nexport async function sendPushNotificationAsync(opts) {\n  let exponentPushToken = opts.exponentPushToken;\n\n  if (!isExponentPushToken(exponentPushToken)) {\n    throw new Error(`Missing \\`exponentPushToken\\`. Should be something like \\\n\\`ExponentPushToken[Re4MeUKjYWNd0FXSj8Eppi]\\` but instead got \\\n\\`${exponentPushToken}\\``);\n  }\n\n  let message = opts.message || undefined;\n  const body = {\n    ...opts.data,\n    exponentPushToken,\n    message,\n  };\n\n  let response = await fetch(`${BASE_API_URL}/notify`, {\n    method: 'POST',\n    body: JSON.stringify(body),\n    headers: new Headers({\n      'Content-Type': 'application/json',\n    }),\n  });\n\n  if (response.status === 400) {\n    throw new Error(`Invalid Exponent Push Token: ${exponentPushToken}`);\n  }\n\n  if (response.status === 200) {\n    return undefined;\n  } else {\n    let json = await response.json();\n    throw new Error(`Error sending push notification: ${json.err}`);\n  }\n}\n"]}